plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'jacoco'
}

android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug{
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
    reports {
        xml.enabled  true
        html.enabled  true
    }

    def kotlinDebugTree = layout.files("$buildDir/tmp/kotlin-classes/debug")
    def mainSource = layout.files("$project.projectDir/src/main/java")
    def executionFilesFromConnectedAndroidTest = fileTree(
            dir: "$buildDir",
            includes: ["outputs/code_coverage/debugAndroidTest/connected/**coverage.ec"]
    )


    def executionFileForUnitTestInModule = "$buildDir/outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec"




    def executionFiles = layout.files(
            executionFilesFromConnectedAndroidTest,
            executionFileForUnitTestInModule,

    )
    sourceDirectories.setFrom(files([mainSource]))
    classDirectories.setFrom(files([kotlinDebugTree.asFileTree]))
    executionData.setFrom(executionFiles.asFileTree)

}



dependencies {
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    implementation testLibs.values()

    
}