plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'jacoco'
}
android {
    compileSdk 31
    defaultConfig {
        applicationId "com.example.adn"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}
jacoco {
    toolVersion = "$jacoco_version"
}


/*task jacocoTestReport(type: JacocoReport, dependsOn: [':domainLibrary:testDebugUnitTest', 'testDebugUnitTest']) {
    reports {
        xml.enabled true
        html.enabled true
    }

    def domainProject = project(':domainLibrary')

    def kotlinDebugTree = layout.files("$buildDir/tmp/kotlin-classes/debug", "$domainProject.buildDir/tmp/kotlin-classes/debug")
    def mainSource = layout.files("$project.projectDir/src/main/java", "$domainProject.projectDir/src/main/java")
    def executionFilesFromConnectedAndroidTest = fileTree(
            dir: "$project.buildDir",
            includes: ["outputs/code_coverage/debugAndroidTest/connected/**coverage.ec"]
    )


    def executionFileForUnitTestInModule = "$buildDir/outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec"

    def executionFileForUnitTestInOtherModule = "$domainProject.buildDir/outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec"


    def executionFiles = layout.files(
            executionFilesFromConnectedAndroidTest,
            executionFileForUnitTestInModule,
            executionFileForUnitTestInOtherModule
    )
    sourceDirectories.setFrom(files([mainSource]))
    classDirectories.setFrom(files([kotlinDebugTree.asFileTree]))
    executionData.setFrom(executionFiles.asFileTree)

}*/

dependencies {
    implementation project(":dataLibrary")
    implementation project(":domainLibrary")
    implementation project(":usecasesLibrary")
    implementation androidLibs.values()
    implementation 'androidx.test.espresso:espresso-contrib:3.4.0'
    kapt androidKaptLibs.values()
    testImplementation testLibs.values()
    androidTestImplementation androidTestLibs.values()

}